{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cloud formation template for POV Environment",
  "Parameters": {
    "PublicHostedZone": {
        "Type": "String",
        "Default": "paas-enablement.net."
    }
  },
  "Resources" : {
      "nginxVPC" : {
         "Type" : "AWS::EC2::VPC",
         "Properties" : {
            "CidrBlock" : "10.0.0.0/16",
    	    "EnableDnsSupport" : "true",
    	    "EnableDnsHostnames" : "true",
            "InstanceTenancy" : "default",
            "Tags" : [ {"Key" : "name", "Value" : "nginxVPC"} ]
         }
      },
	   "nginxSubnet" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "nginxVPC" },
            "CidrBlock" : "10.0.0.0/24",
            "AvailabilityZone" : "us-east-1a",
            "Tags" : [ { "Key" : "name", "Value" : "nginxSubnet" } ]
         }
      },
	   "nginxInstance" : {
        "Type" : "AWS::EC2::Instance",
        "Properties" : {
          "KeyName" : "ifabric-key",
          "InstanceType" : "t2.micro",
          "ImageId" : "ami-4e823a31",
          "SubnetId" : [{ 
                "Ref" : "nginxSubnet"
              }],
          "NetworkInterfaces": [ {
              "AssociatePublicIpAddress": "true",
              "DeviceIndex": "0",
              "GroupSet": [{ 
                "Ref" : "SecurityGroup"
              }] 
              
          } ],
		  "Tag" : [ { "Key" : "name", "Value" : "nginxInstance" } ]
        }
      },
	    "SecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
           "GroupDescription" : "Allow http to client host",
           "SecurityGroupIngress" : [{
                 "IpProtocol" : "tcp",
                 "FromPort" : "22",
                 "ToPort" : "22",
                 "CidrIp" : "0.0.0.0/0"
              },
              {
                "IpProtocol" : "tcp",
                "FromPort" : "0",
                "ToPort" : "65535",
                "CidrIp" : "0.0.0.0/0"
              },
              {
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp" : "0.0.0.0/0"
              },
              {
                "IpProtocol" : "tcp",
                "FromPort" : "8080",
                "ToPort" : "8080",
                "CidrIp" : "0.0.0.0/0"
              }]
        }
     },
	  "nginxRouteTable" : {
         "Type" : "AWS::EC2::RouteTable",
         "Properties" : {
            "VpcId" : { "Ref" : "nginxVPC" },
            "Tags" : [ { "Key" : "name", "Value" : "nginxRouteTable" } ]
         }
      },
	  "nginxInternetGateway" : {
         "Type" : "AWS::EC2::InternetGateway",
         "Properties" : {
            "Tags" : [ {"Key" : "name", "Value" : "nginxInternetGateway"}]
         }
     },
	   "nginxVpcGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
        "VpcId" : { "Ref" : "nginxVPC" },
        "InternetGatewayId" : { "Ref" : "nginxInternetGateway" }
         }
     },
	  "nginxEIP" : {
        "Type" : "AWS::EC2::EIP",
        "DependsOn" : "nginxVpcGatewayAttachment",
        "Properties" : {
          "Domain" : "nginxVPC"
        }
      },
	   "nginxPublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "nginxVpcGatewayAttachment",
      "Properties" : {
        "RouteTableId" : {
          "Ref" : "nginxRouteTable"
        },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : {
          "Ref" : "nginxInternetGateway"
        }
      }
    },
	"nginxPublicRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
         "SubnetId" : {
           "Ref" : "nginxSubnet"
         },
         "RouteTableId" : {
           "Ref" : "nginxRouteTable"
         }
      }
     },
	  "nginxRoute53" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : {
          "Ref": "PublicHostedZone"
        },
        "Name" : {
            "Fn::Join" : [ "", [
               "nginx", ".",
               "paas-enablement.net" ,"."
            ] ]
         },
        "Type" : "A",
        "TTL" : "300",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "nginxInstance", "PublicIp" ] }
        ]
      }
    }

   }
}
